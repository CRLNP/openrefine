# Créer un dataframe avec 3 variables (2 vecteurs numériques et 1 vecteur textuel) avec la fonction data.frame()
age <- c(45,65,22,38,54,31,29,44,56,67)
poids <- c(150,125,210,175,110,180,130,155,190,120)
sexe <- c("H","F","F","H","H","F","F","H","F","H")
bd <- data.frame(age, sexe, poids)
str(bd)
## Importer une base de données dans un module chargé particulier
data(hdv2003)
install.packages("questionr", dep = TRUE)
library(car)       # ou require()
## Voir les bases de données dans un module chargé particulier
data(package="questionr")
## Importer une base de données dans un module chargé particulier
data(hdv2003)
# R a automatiquement créé un objet au nom de la base importée dans notre environnement de travail
hdv2003
library(questionr)
## Importer une base de données dans un module chargé particulier
data(hdv2003)
# R a automatiquement créé un objet au nom de la base importée dans notre environnement de travail
hdv2003
summary(bd) # Résumé de la base de données
summary(bd$age) # Résumé d'une variable quantitative
summary(bd$occup) # Résumé d'une variable qualitative
View(bd)
# Utiliser ponctuellement une fonction d'un module non chargé et désambiguiser différentes fonctions du même nom
psych::describe(bd$age)
Hmisc::describe(bd$age)
## Vérifier son dossier de travail actuel
getwd()
## Définir son dossier de travail (ou sous Session > Set Working Directory)
setwd("C:/Users/p0373489/Desktop/AtelierR")
data(package = .packages(all.available = TRUE))
bd <- hdv2003
rm(hdv2003)  # Supprimer la base de données originale
head(bd) # visualiser les 6 premières observations (modifier le nombre par défaut après une virgule: (bd, 4))
tail(bd) # visualiser les 6 dernières observations
names(bd) # noms des variables
class(bd)  # type d'objet
length(bd) # nombre de variables
str(bd)    # description plus détaillée de la structure du tableau (aussi en cliquant sur objet dans l'environnement - permet de connaitre la structure de tout type d'objet)
bd["relig"] # Sélectionner une variable (contenu textuel entre guillemets simples ou doubles)
bd[,"relig"] # Sélectionner une variable (contenu textuel entre guillemets simples ou doubles)
bd[ c("occup", "relig")] # Sélectionner deux variables
bd[ ,c("occup", "relig")] # Sélectionner deux variables
bd[c("occup", "relig")] # Sélectionner deux variables
bd["occup", "relig"] # Sélectionner deux variables
bd["occup", "relig"] # Sélectionner deux variables
bd[("occup", "relig")] # Sélectionner deux variables
c
bd[c("occup", "relig")] # Sélectionner deux variables
bd[ ,c("occup", "relig")] # Sélectionner deux variables
### On peut aussi mélanger les types d'indexation
bd[1:100, c("id", "age", "sexe", "nivetud", "poids", "relig")]
bd$sexe # Sélectionner la variable sexe
str(bd$sexe) # Structure de la variable
head(bd$sexe) # Premières observations de la variable
unique(bd$nivetud) # Identifier les valeurs uniques de la variable "nivetud"
bd$sexe=="Femme"
bd.cadre3 <- subset(bd, qualif=="Cadre" & age<50, select= c(id,qualif, age))
bdh <- filter(bd, sexe == "Homme"& age <= 50)
bdf <- filter(bd, sexe == "Femme"& age <= 50)
# Documenter les détails de son environnement de travail (système, packages, versions...)
sessionInfo()   # Important à noter pour assurer la reproductibilité des analyses
# Calcul simple
(12+15+20) /     3  # Les espaces n'ont pas d'impact
# R comme une grosse calculatrice
2+2
### Créer des vecteurs principalement avec la fonction c()
aa <- c(5, 23, 89, NA)  # vecteur numérique et une valeur manquante
bb <- c("bleu", "blanc", "rouge")  # vecteur textuel
cc <- c(TRUE, FALSE, FALSE, TRUE)  # vecteur booléen
### On peut ajouter des éléments à un vecteur existant
bb <- c(bb, "jaune", "vert")    # On peut ajouter de nouveaux éléments avant ou aprèes le vecteur original
### On peut combiner plusieurs vecteurs ensemble
dd <- c(aa, bb, cc)  # combiner/concaténer des vecteurs, mais attention au principe de COERCITION (changement implicite du mode)
mode(dd)
### Créer une variable "sexe" de type vecteur textuel
sexet <- c("H", "H", "F", "H")
mode(sexet)
# Créer une variable "sexe" de type facteur à partir d'un vecteur textuel de 4 valeurs de 2 niveaux avec la fonction factor() et assigner des étiquettes aux modalités avec l'argument labels
sexef <- factor("H", "H", "F", "H"), labels = c("Homme", "Femme"))
# Créer une variable "sexe" de type facteur à partir d'un vecteur textuel de 4 valeurs de 2 niveaux avec la fonction factor() et assigner des étiquettes aux modalités avec l'argument labels
sexef <- factor(c("H", "H", "F", "H"), labels = c("Homme", "Femme"))
# Créer une variable "sexe" de type facteur à partir d'un vecteur textuel de 4 valeurs de 2 niveaux avec la fonction factor() et assigner des étiquettes aux modalités avec l'argument labels
sexef <- factor(c("H", "H", "F", "H"), labels = c("Homme", "Femme"))
# L'objet est un facteur avec 2 modalités (niveaux) définies par défaut en fonction des valeurs fournies
str(sexef)
mode(sexef)
type(sexef)
class(sexef)
# Créer un dataframe avec 3 variables (2 vecteurs numériques et 1 vecteur textuel) avec la fonction data.frame()
age <- c(45,65,22,38,54,31,29,44,56,67)
poids <- c(150,125,210,175,110,180,130,155,190,120)
sexe <- c("H","F","F","H","H","F","F","H","F","H")
bd <- data.frame(age, sexe, poids)
bd
str(bd)
mode(bd)
library(leaflet)
long <- 45.524317538919405
lat  <- -73.61964599838916
l <- leaflet() %>% addTiles() %>%
setView(long, lat,  zoom = 17)
l
long <- -73.61964599838916
lat  <- 45.524317538919405
l <- leaflet() %>% addTiles() %>%
setView(long, lat,  zoom = 17)
l
l <- leaflet() %>% addTiles() %>%
setView(long, lat,  zoom = 20)
l
l %>% addMarkers(long, lat,
popup = "AssessFirst",
label = "2O rue du Sentier")
2+
m <- leaflet() %>%
addTiles() %>%
setView( lng = -73.61964599838916, lat = 45.524317538919405 , zoom = 5 ) %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
m <- leaflet() %>%
addTiles() %>%
setView( lng = -73.61964599838916, lat = 45.524317538919405 , zoom = 5 ) %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
m
m <- leaflet() %>%
addTiles() %>%
setView( lng = -73.61964599838916, lat = 45.524317538919405 , zoom = 20) %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
m
m <- leaflet() %>%
addTiles() %>%
setView( lng = -73.61964599838916, lat = 45.524317538919405 , zoom = 20) %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
m
m <- leaflet() %>%
addTiles() %>%
setView( lng = -73.61964599838916, lat = 45.524317538919405 , zoom = 5 ) %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
m
m %>% addMarkers(long, lat,
+                  popup = "AssessFirst",
+                  label = "2O rue du Sentier")
m %>% addMarkers(long, lat,  popup = "AssessFirst",  label = "2O rue du Sentier")
